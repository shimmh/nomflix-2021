{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","Grid","Section","title","children","Loader","role","aria-label","Text","span","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","length","map","movie","poster_path","original_title","vote_average","release_date","substring","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","SHeader","header","List","ul","Item","li","current","SLink","Link","Header","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","Number","isNaN","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0ea3f3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"4c834bc8a1eb1cda919768461786d872\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"video\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"video\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(::last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => {\n  return (\n    <Container>\n      <span role=\"img\" aria-label=\"Loading\">\n        🕒\n      </span>\n    </Container>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  // color를 prop을 통해 받아 오도록 함\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movie | Nomfilx</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nclass HomeContainer extends React.Component {\n  // state 정의\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      // throw Error();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\nexport default HomeContainer;\n","import Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomfilx</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({ error: \"Can't find TV information\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  handleSubmit,\n  updateTerm,\n  error,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomfilx</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  // componentDidMount() {\n  //   this.handleSubmit();\n  // }\n\n  handleSubmit = (event) => {\n    event.preventDefault(); //submit 막기 위해\n\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    // console.log(value);\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    // console.log(this.state);\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n\nexport default SearchContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.2s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = withRouter(({ location: { pathname } }) => {\n  return (\n    <SHeader>\n      <List>\n        <Item current={pathname === \"/\"}>\n          <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n          <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n          <SLink to=\"/search\">Search</SLink>\n        </Item>\n      </List>\n    </SHeader>\n  );\n});\nexport default Header;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 32px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\").default\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} /`\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nclass DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    const { isMovie } = this.state;\n    const parsedId = Number(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, loading, error } = this.state;\n    console.log(result);\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}